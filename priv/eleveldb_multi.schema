%%-*- mode: erlang -*-

%% @see leveldb.data_root
{mapping, "multi_backend.$name.leveldb.data_root", "riak_kv.multi_backend", [
  {datatype, directory},
  hidden
]}.

%% @see leveldb.maximum_memory.percent
{mapping, "multi_backend.$name.leveldb.maximum_memory.percent", "riak_kv.multi_backend", [
  {default, "35"},
  {datatype, integer},
  hidden
]}.

%% @see leveldb.maximum_memory
{mapping, "multi_backend.$name.leveldb.maximum_memory", "riak_kv.multi_backend", [
  {datatype, bytesize},
  hidden
]}.

%% @see leveldb.sync
{mapping, "multi_backend.$name.leveldb.sync_on_write", "riak_kv.multi_backend", [
  {default, off},
  {datatype, flag},
  hidden
]}.

%% @see leveldb.limited_developer_mem
{mapping, "multi_backend.$name.leveldb.limited_developer_mem", "riak_kv.multi_backend", [
  {default, off},
  {datatype, flag},
  hidden
]}.

%% @see leveldb.write_buffer_size_min
{mapping, "multi_backend.$name.leveldb.write_buffer_size_min", "riak_kv.multi_backend", [
  {default, "15MB"},
  {datatype, bytesize},
  hidden
]}.

%% @see leveldb.write_buffer_size_min
{mapping, "multi_backend.$name.leveldb.write_buffer_size_max", "riak_kv.multi_backend", [
  {default, "30MB"},
  {datatype, bytesize},
  hidden
]}.

%% @see leveldb.bloomfilter
{mapping, "multi_backend.$name.leveldb.bloomfilter", "riak_kv.multi_backend", [
  {default, on},
  {datatype, flag},
  hidden
]}.

%% @see leveldb.block_cache_threshold
{mapping, "multi_backend.$name.leveldb.block_cache_threshold", "riak_kv.multi_backend", [
  {default, "32MB"},
  {datatype, bytesize},
  hidden
]}.

%% @see leveldb.block.size
{mapping, "multi_backend.$name.leveldb.block.size", "riak_kv.multi_backend", [
  {default, "4KB"},
  {datatype, bytesize},
  hidden
]}.

%% @see leveldb.block.restart_interval
{mapping, "multi_backend.$name.leveldb.block.restart_interval", "riak_kv.multi_backend", [
  {default, 16},
  {datatype, integer},
  hidden
]}.

%% @see leveldb.block.size_steps
{mapping, "multi_backend.$name.leveldb.block.size_steps", "riak_kv.multi_backend", [
  {default, 16},
  {datatype, integer},
  hidden
]}.

%% @see leveldb.verify_checksums
{mapping, "multi_backend.$name.leveldb.verify_checksums", "riak_kv.multi_backend", [
  {default, on},
  {datatype, flag},
  hidden
]}.

%% @see leveldb.verify_compaction
{mapping, "multi_backend.$name.leveldb.verify_compaction", "riak_kv.multi_backend", [
  {default, on},
  {datatype, flag},
  hidden
]}.

%% @see leveldb.threads
{mapping, "multi_backend.$name.leveldb.threads", "riak_kv.multi_backend", [
  {default, 71},
  {datatype, integer},
  hidden
]}.

%% @see leveldb.fadvise_willneed
{mapping,
  "multi_backend.$name.leveldb.fadvise_willneed",
  "riak_kv.multi_backend", [
  {default, false},
  {datatype, {enum, [true, false]}},
  hidden
]}.

%% @see leveldb.compression
{mapping,
  "multi_backend.$name.leveldb.compression",
  "riak_kv.multi_backend", [
  {default, on},
  {datatype, flag},
  hidden
]}.

%% @see leveldb.delete_threshold
{mapping,
  "multi_backend.$name.leveldb.compaction.trigger.tombstone_count",
  "riak_kv.multi_backend", [
  {datatype, [integer, {atom, off}]},
  hidden
]}.

%% @see leveldb.tiered
{mapping, "multi_backend.$name.leveldb.tiered", "riak_kv.multi_backend", [
  {default, off},
  {datatype, [
              {atom, off},
              {integer, 1},
              {integer, 2},
              {integer, 3},
              {integer, 4},
              {integer, 5},
              {integer, 6}
             ]},
  hidden
]}.

%% @see leveldb.tiered
{mapping, "multi_backend.$name.leveldb.tiered.mountpoint.fast", "riak_kv.multi_backend", [
  {datatype, directory},
  hidden
]}.

%% @see leveldb.tiered
{mapping, "multi_backend.$name.leveldb.tiered.mountpoint.slow", "riak_kv.multi_backend", [
  {datatype, directory},
  hidden
]}.
